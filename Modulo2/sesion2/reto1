import java.util.concurrent.*;

//Runnable -> solo corre, pero no devuelve nada
//Callable<T> -> corre y devuelve algo. En este caso, String

//Sistema de NavegaciÃ³n
class SistemaNavegacion implements Callable<String> {
    @Override
    public String call() throws Exception {
        Thread.sleep(2000); //Simulamos calculos orbitales
        return "\uD83D\uDEF0\uFE0F NavegaciÃ³n: trayectoria corregida con Ã©xito.";
    }
}

//Sistema de Soporte Vital
class SistemaSoporteVital implements Callable<String>{
    @Override
    public String call() throws Exception{
        Thread.sleep(3800); // Simula monitoreo rÃ¡pido
        return "ðŸ§ª Soporte vital: presiÃ³n y oxÃ­geno dentro de parÃ¡metros normales.";
    }
}

//Sistema de Control Termico
class SistemaControlTermico implements Callable<String> {
    @Override
    public String call() throws Exception {
        Thread.sleep(4200); // Toma un poco mÃ¡s verificar temperaturas
        return "ðŸ”¥ Control tÃ©rmico: temperatura estable (22Â°C).";
    }
}

// Sistema de Comunicaciones
class SistemaComunicaciones implements Callable<String> {
    @Override
    public String call() throws Exception {
        Thread.sleep(500); // Enlace rÃ¡pido
        return "ðŸ“¡ Comunicaciones: enlace con estaciÃ³n terrestre establecido.";
    }
}

//Clase principal
public class Main {
    public static void main(String[] args){
        System.out.println("ðŸš€ SimulaciÃ³n de misiÃ³n espacial iniciada...");

        //Creamos un pool fijo de 4 hilos (uno por subsistema)
        ExecutorService executor = Executors.newFixedThreadPool(4);

        try {
            //Lanzamos las tareas concurrentes
            Future<String> nav = executor.submit(new SistemaNavegacion());
            Future<String> soporte = executor.submit(new SistemaSoporteVital());
            Future<String> termico = executor.submit(new SistemaControlTermico());
            Future<String> comunicaciones = executor.submit(new SistemaComunicaciones());

            // Obtenemos los resultados (esperamos a que terminen)
            System.out.println(comunicaciones.get());
            System.out.println(soporte.get());
            System.out.println(termico.get());
            System.out.println(nav.get());

            System.out.println("âœ… Todos los sistemas reportan estado operativo.");
        } catch (InterruptedException | ExecutionException e) {
            e.printStackTrace();
        } finally {
            // ðŸ§¼ Cerramos el executor
            executor.shutdown();
        }
    }
}
